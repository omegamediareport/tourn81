{
    "model": "NousResearch/Genstruct-7B",
    "task_id": "f40f4ff1-f30b-477b-85ac-a0b4f4b571c2",
    "task_type": "GrpoTask",
    "hours_to_complete": 4.0,
    "expected_repo_name": "f5db5d3d-5ac9-494a-8ec1-4b1efe1f44eb",
    "dataset": "https://gradients.s3.eu-north-1.amazonaws.com/5ae1986d68729cbb_train_data.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVVZOOA7SA4UOFLPI%2F20250814%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20250814T195558Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=9bacef7467bf5f3c8bb5d964439f4ef2c189b2b5f2f222605c6a85c8836fcbdc",
    "dataset_type": {
        "field_prompt": "prompt",
        "reward_functions": [
            {
                "reward_id": "02cf0da9-9172-4f70-a97a-e35782126713",
                "reward_func": "def reward_think_answer_format(completions, **kwargs):\n    \"\"\"Reward function that checks if the completion has a specific format.\"\"\"\n    import re\n    pattern = r\"^<think>.*?</think><answer>.*?</answer>$\"\n    try:\n        matches = [re.match(pattern, content) for content in completions]\n        return [1.0 if match else 0.0 for match in matches]\n    except Exception as e:\n        print(f\"Error in format_reward_func: {e}\")\n        return [0.0 for _ in completions]\n",
                "reward_weight": 6.465211221981089,
                "func_hash": "e5bab80edb8fe0a76e0018c15df56e3e52f2c932e8506c6f7cf61ba59c10defa",
                "is_generic": true
            },
            {
                "reward_id": "39f3c7d1-c7b5-4552-ab53-14790500436e",
                "reward_func": "def reward_long_sentences(completions, **kwargs):\n    \"\"\"Rewards text with longer average sentence length.\"\"\"\n    import textstat\n    scores = [textstat.words_per_sentence(comp) for comp in completions]\n    return scores\n",
                "reward_weight": 5.762198279985052,
                "func_hash": "0dca520c8a5cf852b2b8e1b93c9ac58acccf220ac6c41678f52386675de9f13d",
                "is_generic": true
            },
            {
                "reward_id": "a5acebbb-d649-49c5-9dfd-83465eb0259f",
                "reward_func": "def reward_specific_char_count(completions, **kwargs):\n    \"\"\"Rewards completions that are close to n_chars characters.\"\"\"\n    n_chars = 100\n    return [-abs(n_chars - len(completion)) for completion in completions]\n",
                "reward_weight": 3.9912916140139796,
                "func_hash": "db0451506ebb04b0f56e4295b1381f499c3634f25d3cd3002b041ab10dbac24f",
                "is_generic": true
            },
            {
                "reward_id": "d101ac16-f7b6-4617-93ff-d872eacb9ad2",
                "reward_func": "def reward_low_difficult_words_percentage(completions, **kwargs):\n    \"\"\"Rewards text with lower difficult words percentage.\"\"\"\n    import textstat\n    scores = []\n    for comp in completions:\n        words = comp.split()\n        if not words:\n            scores.append(0.0)\n        else:\n            difficult_words = textstat.difficult_words(comp)\n            scores.append(-difficult_words/len(words))\n    return scores\n",
                "reward_weight": 2.8072029522858744,
                "func_hash": "2de7c15f19bc02bacd9dfcf5a234a3eb6a017bb939ecb0ea1c9eb845ee62a78d",
                "is_generic": true
            }
        ],
        "extra_column": null
    },
    "file_format": "s3"
}